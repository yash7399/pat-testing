name: Build and Push DLL

on:
  push:
    branches:
      - main   # Run this workflow whenever you push to main

permissions:
  contents: write   # Allow workflow to push commits/branches

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1 — Get your repo code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2 — Setup .NET SDK
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x  # adjust if you’re using another version

      # Step 3 — Restore dependencies (even if none, safe to include)
      - name: Restore dependencies
        run: dotnet restore

      # Step 4 — Build your project (change HelloLib.csproj if needed)
      - name: Build project
        run: dotnet build --configuration Release

      # Step 5 — Commit DLL to dll-artifacts branch
      - name: Commit DLL to repo
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

          # Fetch dll-artifacts branch if it exists
          git fetch origin dll-artifacts || true
          
          # Checkout existing branch or create a new one
          if git show-ref --verify --quiet refs/remotes/origin/dll-artifacts; then
            git checkout dll-artifacts
            git pull origin dll-artifacts
          else
            git checkout -b dll-artifacts
          fi
          
          # Copy built DLL to repo root
          cp HelloLib/bin/Release/net8.0/HelloLib.dll .
          
          # Commit new DLL
          git add HelloLib.dll
          git commit -m "Update DLL from latest build" || echo "No changes to commit"

          # Push changes (overwrite old DLL if needed)
          git push origin dll-artifacts --force
